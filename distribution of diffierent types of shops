#面包甜点

bread_dessert = new_data[new_data['分类'] == '面包甜点']
bread_dessert = bread_dessert.groupby(by = '地点')['地点'].agg({
        '数量':np.size}).sort_values(by='数量',ascending = False)
bread_dessert = bread_dessert[bread_dessert.数量 >= 15]

index = np.arange(len(bread_dessert.index))
number = np.array(list(bread_dessert.数量))
plt.bar(index,bread_dessert['数量'],color = 'lime')
plt.xticks(index,bread_dessert.index,rotation = 90)
for a,b in zip(index,number):
    plt.text(a,b+0.5,'%.0f' % b,ha = 'center',va = 'bottom')
plt.title('面包甜点地点分布')
plt.savefig('面包甜点地点分布.png',dpi = 400)

#DIY手工坊
diy = new_data[new_data['分类'] == 'DIY手工坊']
diy = diy.groupby(by = '地点')['地点'].agg({
        '数量':np.size}).sort_values(by='数量',ascending = False)
diy = diy[diy.数量 >= 3]

index = np.arange(len(diy.index))
number = np.array(list(diy.数量))
plt.figure(figsize = (15,15))
plt.bar(index,diy['数量'],color = 'cornflowerblue')
plt.xticks(index,diy.index,rotation = 90)
for a,b in zip(index,number):
    plt.text(a,b+0.1,'%.0f' % b,ha = 'center',va = 'bottom')
plt.title('DIY手工坊地点分布')
plt.savefig('DIY手工坊地点分布.png',dpi = 400)

#'兴趣生活', '婚礼蛋糕', '亲子玩乐', '职业技术'
new_data.分类.unique()
lst = ['兴趣生活', '婚礼蛋糕', '亲子玩乐', '职业技术']
lst_1 = []
lst_2 = []

for index,row in new_data.iterrows():
    category = row['分类']
    loction = row['地点']
    for x in lst:
        if x == category:
            lst_1.append(category)
            lst_2.append(loction)
            
other = pd.DataFrame({'分类':lst_1,
                      '地点':lst_2})

group = other.groupby(by = ['分类'])#,'地点'])['地点'].agg({'数量':np.size})

i=0
for x in group.groups:
    subdata = group.get_group(x).groupby(by = '地点')['地点'].agg({'数量':np.size})
    i = i+1
    plt.subplot(2,2,i)
    plt.title(str(x) + '地点分布')
    index = np.arange(len(subdata.index))
    plt.bar(index,subdata['数量'],color = 'deepskyblue')
    plt.yticks(np.arange(0,4))
    plt.xticks(index,subdata.index,rotation = 90)
    plt.subplots_adjust(top = 5, right = 5)
    plt.savefig('其他类型地点分布.png',dpi = 400)
    
    dic = {'798/大山子':'朝阳区',
'万柳':'海淀区',
'三里屯':'朝阳区',
'上地':'海淀区',
'下园':'怀柔区',
'东四':'东城区',
'东四十条':'东城区',
'东城区':'东城区',
'东直门':'东城区',
'中关村':'海淀区',
'中国地质大学长城学院大学城':'石景山区',
'丰台其它':'丰台区',
'丰台区':'丰台区',
'九棵树':'通州区',
'云岗':'丰台区',
'五棵松':'海淀区',
'五道口':'海淀区',
'亚运村':'朝阳区',
'亦庄':'大兴区',
'亮马桥/三元桥':'朝阳区',
'什刹海':'西城区',
'传媒大学/二外':'朝阳区',
'光明楼/龙潭湖':'东城区',
'公主坟/万寿路':'海淀区',
'公益西桥':'丰台区',
'六里桥/丽泽桥':'丰台区',
'分钟寺/成寿寺':'丰台区',
'刘家窑':'丰台区',
'前门':'东城区',
'劲松/潘家园':'朝阳区',
'北七家':'昌平区',
'北下关':'海淀区',
'北京欢乐谷':'朝阳区',
'北京西站/六里桥':'海淀区',
'北太平庄':'海淀区',
'北新桥/簋街':'东城区',
'北苑家园':'朝阳区',
'十八里店':'朝阳区',
'十里堡':'朝阳区',
'十里河':'朝阳区',
'南锣鼓巷/鼓楼东大街':'东城区',
'卢沟桥':'丰台区',
'双井':'朝阳区',
'双桥':'朝阳区',
'双榆树':'海淀区',
'古城/八角':'石景山区',
'右安门':'丰台区',
'后沙峪':'顺义区',
'和平里':'东城区',
'商业街':'怀柔区',
'四季青':'海淀区',
'四惠':'朝阳区',
'回龙观':'昌平区',
'国展':'朝阳区',
'国贸':'朝阳区',
'复兴门':'西城区',
'夏家胡同/纪家庙':'丰台区',
'大兴区':'大兴区',
'大厂回族自治县其他':'',
'大屯':'朝阳区',
'大望路':'朝阳区',
'大红门':'丰台区',
'大钟寺':'海淀区',
'天通苑':'昌平区',
'太阳宫':'朝阳区',
'姚家园':'朝阳区',
'孙河':'朝阳区',
'学院桥':'海淀区',
'安定门':'东城区',
'安贞':'朝阳区',
'宋家庄':'丰台区',
'密云县其他':'密云县',
'密云果园':'密云县',
'密云沙河':'密云县',
'小汤山':'昌平区',
'小营':'海淀区',
'崇文门':'东城区',
'工人体育场':'朝阳区',
'左家庄':'朝阳区',
'常营':'朝阳区',
'平谷区':'平谷区',
'广内大街':'西城区',
'广外大街':'西城区',
'广渠门':'东城区',
'延庆县其他':'延庆县',
'建国门/北京站':'东城区',
'建外大街':'东城区',
'开阳里':'丰台区',
'德外大街':'西城区',
'怀柔区':'怀柔区',
'总部基地':'丰台区',
'慈云寺/八里庄':'海淀区',
'房山区':'房山区',
'新华大街':'通州区',
'新街口':'西城区',
'方庄':'丰台区',
'旧宫':'大兴区',
'昌平区':'昌平区',
'昌平镇':'昌平区',
'望京':'朝阳区',
'朝外大街':'朝阳区',
'朝阳公园/团结湖':'朝阳区',
'朝阳其它':'朝阳区',
'朝阳区':'朝阳区',
'朝阳门':'朝阳区',
'梨园':'通州区',
'武夷花园':'通州区',
'沙子口':'东城区',
'沙河':'昌平区',
'沙滩/美术馆灯市口':'东城区',
'洋桥/木樨园':'丰台区',
'海淀其它':'海淀区',
'海淀区':'海淀区',
'清河':'昌平区',
'燕莎/农业展览馆':'朝阳区',
'牛街':'西城区',
'物资学院':'通州区',
'王府井/东单':'东城区',
'甜水园':'朝阳区',
'田村':'海淀区',
'百子湾':'朝阳区',
'看丹桥':'丰台区',
'知春路':'海淀区',
'石景山区':'石景山区',
'立水桥':'昌平区',
'管庄':'朝阳区',
'紫竹桥':'海淀区',
'综合楼':'大兴区',
'航天桥':'海淀区',
'良乡':'房山区',
'花乡':'丰台区',
'苏州桥':'海淀区',
'苹果园':'石景山区',
'草房':'朝阳区',
'草桥':'丰台区',
'蓝色港湾':'朝阳区',
'虎坊桥':'西城区',
'西三旗':'昌平区',
'西单':'西城区',
'西四':'西城区',
'西城区':'西城区',
'西直门/动物园':'西城区',
'西红门':'大兴区',
'贡院街':'',
'远大路':'海淀区',
'通州北苑':'通州区',
'通州区':'通州区',
'酒仙桥':'朝阳区',
'长阳镇':'房山区',
'门头沟区':'门头沟区',
'阎村镇':'房山区',
'阜成门':'西城区',
'陶然亭':'丰台区',
'雍和宫/地坛':'东城区',
'霄云路':'朝阳区',
'青年路':'朝阳区',
'顺义':'顺义区',
'顺义区':'顺义区',
'颐和园':'海淀区',
'首都机场':'顺义区',
'马家堡/角门':'丰台区',
'马泉营':'朝阳区',
'马驹桥':'通州区',
'高碑店':'朝阳区',
'魏公村':'海淀区',
'鲁谷':'石景山区',
'黄村':'昌平区'}
   
location = new_data[['分类','地点']]
location['地点'] = location['地点'].map(dic)    

loc_cat = pd.pivot_table(location,index = '地点',
                      columns = '分类', values = '地点',
                      aggfunc = np.size).sort_values(
                              by = '面包甜点',ascending = False)    

loc_cat = loc_cat.drop(labels = '',axis = 0)
color = ['gold','salmon','royalblue','violet','silver','lime']
loc_cat = loc_cat.iloc[:,[5,0,3,2,4,1]]
loc_cat.plot(kind = 'bar',stacked = 'True',color=color)
plt.title('整体分布')
plt.savefig('整体分布.png',dpi = 400) 
